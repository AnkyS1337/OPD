<?php

namespace app\models;


use Yii;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

class Order_of_Route extends ActiveRecord
{


    public function rules()
    {
        return
            [
                [['id_route','id_shop','NPP'],'required','message'=>'Данное поле должно быть заполнено']
            ];
    }

    public static function tableName()
    {
        return 'order_of_route'; // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return
            [
                'id_route'=>'Название маршрута',
                'id_shop'=>'Название точки продаж',
                'NPP'=>'Очередность в маршруте'
            ];
    }
    public  function getShop_name()
    {
        $name=(Entity::find()->where(['id'=>(Shop::find()->where(['id'=>$this->id_shop])->one())->id_entity])->one())->name." ".(Shop::find()->where(['id'=>$this->id_shop])->one())->address." ".(Shop::find()->where(['id'=>$this->id_shop])->one())->name;
        return $name ;
    }

    public static function getShops_for_route($id_route)
    {
       $all_shops=ArrayHelper::map(Shop::find()->where(['deleted'=>0])->all(),'id','name');
       foreach ($all_shops as $key=>$shop)
       {
           $all_shops[$key]=(Entity::find()->where(['id'=>(Shop::find()->where(['id'=>$key])->one())->id_entity])->one())->name." ".(Shop::find()->where(['id'=>$key])->one())->address;
       }
        $all_using_shops=Order_of_Route::find()->where(['and',['deleted'=>0,'id_route'=>$id_route]])->select('id_shop')->asArray()->column();
        foreach ($all_using_shops as $all_using_shop)
        {
            unset($all_shops[$all_using_shop]);
        }
        return $all_shops;
    }
}

